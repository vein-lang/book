(self.webpackChunkdocs_vein_lang=self.webpackChunkdocs_vein_lang||[]).push([[587],{3905:function(e,r,n){"use strict";n.d(r,{Zo:function(){return u},kt:function(){return m}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),l=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?t.createElement(y,o(o({ref:r},u),{},{components:n})):t.createElement(y,o({ref:r},u))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3558:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var t=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],c={description:"Class"},s=void 0,l={unversionedId:"runtime/api/Array",id:"runtime/api/Array",isDocsHomePage:!1,title:"Array",description:"Class",source:"@site/docs/runtime/api/Array.md",sourceDirName:"runtime/api",slug:"/runtime/api/Array",permalink:"/docs/runtime/api/Array",editUrl:"https://github.com/0xF6/docs.vein-lang/edit/master/docs/runtime/api/Array.md",version:"current",frontMatter:{description:"Class"},sidebar:"tutorialSidebar",previous:{title:"ValueType",permalink:"/docs/runtime/api/ValueType"},next:{title:"String",permalink:"/docs/runtime/api/String"}},u=[{value:"Declaration",id:"declaration",children:[]},{value:"Methods",id:"methods",children:[]},{value:"Fields",id:"fields",children:[]},{value:"Creating Array Objects Using Array Literals",id:"creating-array-objects-using-array-literals",children:[]},{value:"Accessing Values Using Indexers",id:"accessing-values-using-indexers",children:[]}],p={toc:u};function d(e){var r=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Class")),(0,i.kt)("p",null,"An object representing a static ordered collection, for use instead of an  ",(0,i.kt)("a",{parentName:"p",href:"./Array"},"Array")," constant in cases that require reference semantics."),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"declaration"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"[special, forwarded]\npublic class Array : vein/lang/Object\n{\n    ...\n}\n")),(0,i.kt)("h3",{id:"methods"},"Methods"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"[virtual]\npublic toString(): String;\n")),(0,i.kt)("h3",{id:"fields"},"Fields"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'[native("!!size"), readonly]\npublic Length: Int64;\n\n[native("!!rank"), readonly]\npublic Rank: Int64;\n')),(0,i.kt)("h3",{id:"creating-array-objects-using-array-literals"},"Creating Array Objects Using Array Literals"),(0,i.kt)("p",null,"In addition to the provided initializers, such as ",(0,i.kt)("strong",{parentName:"p"},"ctor()"),",\nyou can create an  ",(0,i.kt)("a",{parentName:"p",href:"./Array"},"Array")," object using an array literal."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'auto array = new Object[1] { "FooBar" };\n')),(0,i.kt)("h3",{id:"accessing-values-using-indexers"},"Accessing Values Using Indexers"),(0,i.kt)("p",null,"In addition to the provided instance methods, such as ",(0,i.kt)("strong",{parentName:"p"},"object","[index]"),", you can access ",(0,i.kt)("a",{parentName:"p",href:"./Array"},"Array")," values by their indexes using subscripting."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"auto value = array[3];\n")))}d.isMDXComponent=!0}}]);